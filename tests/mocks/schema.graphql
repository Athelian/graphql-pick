union PostPayload = BadRequest | Forbidden | Post
union OrganizationPayload = BadRequest | Forbidden | Organization
union UserPayload = BadRequest | Forbidden | User

type BadRequest {
  reason: String!
}

type Forbidden {
  reason: String!
}

interface Model {
  id: ID!
}

interface Owned {
  ownedBy: User!
}

type Address {
  street: String!
  city: String!
  state: String!
  zip: String!
}

type Post implements Model & Owned {
  id: ID!
  ownedBy: User!
  title: String!
  content: String!
}

type Organization implements Model {
  id: ID!
  name: String!
  hasUser(id: ID!): Boolean
  users: [User]
}

type User implements Model {
  id: ID!
  name: String!
  age: Int
  address: Address
  posts: [PostPayload]
  organization: OrganizationPayload
  previousOrganization: OrganizationPayload
}

type Query {
  currentUser: User
  user(id: ID!): User
  users: [User]
  organization(id: ID!): Organization
}
